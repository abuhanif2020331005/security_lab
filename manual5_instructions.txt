Manual 5 Implementation (with parts from Web Lab Manual 1)
==========================================================

Assumptions:
- Ubuntu machine with sudo access
- You have completed Lab 1's Apache install & virtual host setup

------------------------------------------------------------
0. Prep & Install Packages
------------------------------------------------------------
sudo apt update
sudo apt install -y apache2 openssl ufw
sudo apt install -y apache2-utils

------------------------------------------------------------
1. Basic Apache Setup (from Lab 1)
------------------------------------------------------------
# Enable and start apache
sudo systemctl enable --now apache2

# Allow HTTP in firewall
sudo ufw allow 'Apache'
sudo ufw status

# Create virtual host directories
sudo mkdir -p /var/www/example.com/html
sudo mkdir -p /var/www/webserverlab.com/html

sudo chown -R $USER:$USER /var/www/example.com/html
sudo chown -R $USER:$USER /var/www/webserverlab.com/html
sudo chmod -R 755 /var/www/example.com /var/www/webserverlab.com

# Create sample index pages
cat > /var/www/example.com/html/index.html <<'HTML'
<html><head><title>example.com</title></head>
<body><h1>example.com works</h1></body></html>
HTML

cat > /var/www/webserverlab.com/html/index.html <<'HTML'
<html><head><title>webserverlab.com</title></head>
<body><h1>webserverlab.com works</h1></body></html>
HTML

# Add hostnames to /etc/hosts
sudo -- sh -c 'echo "127.0.0.1 example.com webserverlab.com" >> /etc/hosts'

# Create virtual host config files
sudo tee /etc/apache2/sites-available/example.com.conf > /dev/null <<'EOF'
<VirtualHost *:80>
    ServerAdmin admin@example.com
    ServerName example.com
    ServerAlias www.example.com
    DocumentRoot /var/www/example.com/html
    ErrorLog ${APACHE_LOG_DIR}/example_error.log
    CustomLog ${APACHE_LOG_DIR}/example_access.log combined
</VirtualHost>
EOF

# Repeat above for webserverlab.com.conf

sudo a2ensite example.com.conf
sudo a2ensite webserverlab.com.conf
sudo a2dissite 000-default.conf
sudo apache2ctl configtest
sudo systemctl restart apache2

------------------------------------------------------------
2. Create Local Certificate Authority (CA) (from Lab 5)
------------------------------------------------------------
mkdir ~/myCA && cd ~/myCA
cp /usr/lib/ssl/openssl.cnf ./openssl.cnf 2>/dev/null || cp /etc/ssl/openssl.cnf ./openssl.cnf
mkdir -p certs crl newcerts private
chmod 700 private
touch index.txt
printf '1000' > serial

openssl req -new -x509 -days 3650 -keyout ca.key -out ca.crt -config openssl.cnf

------------------------------------------------------------
3. Generate Server Key + CSR (example.com)
------------------------------------------------------------
openssl genrsa -des3 -out server.key 2048
openssl req -new -key server.key -out server.csr -config openssl.cnf

------------------------------------------------------------
4. Sign CSR with CA
------------------------------------------------------------
openssl ca -in server.csr -out server.crt -cert ca.crt -keyfile ca.key -config openssl.cnf

------------------------------------------------------------
5. Test with openssl s_server (optional)
------------------------------------------------------------
cp server.key server.pem
cat server.crt >> server.pem
openssl s_server -cert server.pem -accept 4433 -www

------------------------------------------------------------
6. Import CA into Browser
------------------------------------------------------------
- Firefox: Preferences → Privacy & Security → View Certificates → Import → select ca.crt → trust for websites.

------------------------------------------------------------
7. Deploy Certificate in Apache
------------------------------------------------------------
sudo cp server.crt /etc/ssl/certs/example.com.crt
sudo cp server.key /etc/ssl/private/example.com.key
sudo chmod 600 /etc/ssl/private/example.com.key

sudo tee /etc/apache2/sites-available/example.com.conf > /dev/null <<'EOF'
<VirtualHost *:80>
    ServerAdmin admin@example.com
    ServerName example.com
    ServerAlias www.example.com
    DocumentRoot /var/www/example.com/html
</VirtualHost>

<IfModule mod_ssl.c>
<VirtualHost *:443>
    ServerAdmin admin@example.com
    ServerName example.com
    ServerAlias www.example.com
    DocumentRoot /var/www/example.com/html

    SSLEngine on
    SSLCertificateFile /etc/ssl/certs/example.com.crt
    SSLCertificateKeyFile /etc/ssl/private/example.com.key
</VirtualHost>
</IfModule>
EOF

sudo a2enmod ssl
sudo a2ensite example.com.conf
sudo apache2ctl configtest
sudo systemctl restart apache2

sudo ufw allow 'Apache Full'
sudo ufw status

------------------------------------------------------------
8. Repeat for webserverlab.com
------------------------------------------------------------
Repeat steps 3-7 for webserverlab.com.

------------------------------------------------------------
9. Troubleshooting
------------------------------------------------------------
- Remove passphrase from key: openssl rsa -in server.key -out server.key.unencrypted
- SAN mismatch: edit openssl.cnf to include subjectAltName
- Permissions: private keys in /etc/ssl/private with chmod 600

------------------------------------------------------------
10. Checkpoints for Submission
------------------------------------------------------------
- HTTP virtual hosts working
- CA created and server certs signed
- HTTPS working with no warnings after CA import
